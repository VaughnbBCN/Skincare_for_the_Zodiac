Communication Contract 

Requesting Data
The client.py page is an example of client code you can use to request data from this microservice. When you run the code,
you can directly input a starsign and the server will return a piece of skincare advice relevant to the starsign.
When the client code is run, the current prompt (which you may modify) is "Enter your star sign:" 

Here's a code snippet to demonstrate: 
if __name__ == '__main__':
    star_sign_client = StarSignClient()
    star_sign = input("Enter your star sign: ").strip()
    response = star_sign_client.send_star_sign(star_sign)
    print(f"Response: {response}")

The star_sign_client opens a StarSignClient class object and then uses the user input as the request in the next two lines. 

Receiving data
You should install pika. Then you should run the server file before running the client code. The server will be listening for the data request and return it when asked. When you look at server.py, you can see the skincare tips that the server will provide. 

Here's a code snippet to demonstrate: 
def callback(ch, method, properties, body):
    star_sign = body.decode()
    response = star_sign_messages.get(star_sign.lower(), "Unknown star sign")

This is the start of the function that sends the skincare tips, which are stored in the variable star_sign_messages. 

So: 
install pika
download server.py
use the pika code from the client.py and the example of how to connect it to help you use the server as you wish. 
use an IDE to open the file and a terminal (I used VSCode), enter: python3 server.py to start the server. 



